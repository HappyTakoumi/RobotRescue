Connexion Pi:
Lister les adresses IP du sous-réseau : 
sudo nmap -sP 192.168.88.0/24
se connecter en ssh :
ssh pi@<a>

Utile:
Copier du PC vers la pi :
scp -r /trucacopiersurlepc pi@<adresse_ip>:/dossier/

mannete pi:
Installation ou mise a jours des drivers => sudo apt-get install xboxdrv
Installation du package joystick => sudo apt-get install joystick

Code cpp:
Nous avonc repris un code en cpp pour la partie lecture de la manette et envoie des information dans la liasions série.


Code Stm32:
Dans un premier temps nous avons configurer un timer pour nous fournir un signal PWM.
Confifurgation = Horloge 80MHz /Prescaler tim1 = 80-1 /Period = 20000-1  ==> Impulsion toutes les 20 ms
Grace à la fonction __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, x) nous pouvons configurer la largeur de l'impulsion avec x en µs et compris entre 1ms(0°) et 2ms(180°)
C'est signaux nous servirons pour le servomoteur et le moteur bruschless.

Nous avons créer un code qui utilise les interuptions sur l'uart pour lire les caractères qui arrivent.
Nous réalisons un traitement sur la chaine de caractères, on vérifie le premier caractère pour savoir si c'est la chaine de caractère est pour la position x ou y puis on on place la valeur dans la bonne variable.
Pour la position X nous avons créer une fonction ( non opérationnel) pour transformé la position en un temps de comparaison pour le signal PWM du servomoteur.
